package com.fanhoufang.blog.common.constant;


import lombok.Getter;

@Getter
public enum CommonStatusCode {
    /**
     * 处理成功
     */
    SUCCESS(0, "处理成功", false),
    /**
     * 操作失败
     */
    ERROR(-1, "操作失败", false),
    /**
     * 网络连接错误
     */
    _1001(1001, "网络连接错误", false),
    /**
     * 网络连接超时
     */
    _1002(1002, "网络连接超时", false),
    /**
     * 服务器内部错误
     */
    _1003(1003, "服务器内部错误", false),
    /**
     * 服务器不支持当前请求
     */
    _1004(1004, "服务器不支持当前请求", true),
    /**
     * 网关错误
     */
    _1005(1005, "网关错误", false),
    /**
     * 服务器无法处理当前请求
     */
    _1006(1006, "服务器无法处理当前请求", true),
    /**
     * 系统繁忙
     */
    _1007(1007, "系统繁忙", true),
    /**
     * 中间件异常
     */
    _1008(1008, "中间件异常", false),
    /**
     * 数据库异常
     */
    _1009(1009, "数据库异常", false),
    /**
     * 其他异常
     */
    _1010(1010, "其他异常", false),
    /**
     * 重复操作
     */
    _1011(1011, "重复操作", false),
    /**
     * 令牌错误
     */
    _1012(1012, "令牌错误", false),
    /**
     * 令牌过期
     */
    _1013(1013, "令牌过期", false),

    //网关层使用
    /**
     * 无权限访问
     */
    _1014(1014, "无权限访问", false),
    //用于404时使用
    /**
     * 请求地址不存在
     */
    _1015(1015, "请求地址不存在", false),
    /**
     * 陪审员服务登录异常
     */
    JURY_UNAUTHORIZED(1016, "陪审员服务登录异常", false),
    /**
     * 陪审员服务内部错误
     */
    JURY_INTERNAL_SERVER_ERROR(1017, "陪审员服务内部错误", false),
    /**
     * 认证超时
     */
    _2000(2000, "认证超时", true),
    //业务层使用
    /**
     * 没有权限访问
     */
    _2001(2001, "没有权限访问", true),
    /**
     * 身份认证失败
     */
    _2002(2002, "身份认证失败", true),
    /**
     * 用户不存在
     */
    _2003(2003, "用户不存在", true),
    /**
     * 角色不存在
     */
    _2004(2004, "角色不存在", true),
    /**
     * 参数格式异常
     */
    _2005(2005, "参数格式异常", true),
    /**
     * 字段不能为空
     */
    _2006(2006, "{0}字段不能为空", true),
    /**
     * 字段不符合日期规则
     */
    _2007(2007, "{0}字段不符合日期规则", true),
    /**
     * 字段不符合数值规则
     */
    _2008(2008, "{0}字段不符合数值规则", true),
    /**
     * 字段不符合金额规则
     */
    _2009(2009, "{0}字段不符合金额规则", true),
    /**
     * 字段长度不符合规范
     */
    _2010(2010, "{0}字段长度不符合规范", true),
    /**
     * 数据签名验签失败
     */
    _2011(2011, "数据签名验签失败", false),
    /**
     * 存在重复数据
     */
    _2012(2012, "存在重复数据", true),
    /**
     * 文件格式不正确
     */
    _2013(2013, "文件格式不正确", true),
    /**
     * 文件内容太大
     */
    _2014(2014, "文件内容太大", true),
    /**
     * 参数不正确
     */
    _2015(2015, "参数不正确", true),
    /**
     * 新密码与当前密码一致
     */
    _2016(2016, "新密码与当前密码一致", true),
    /**
     * 插入数据异常
     */
    _3001(3001, "插入数据异常", false),
    /**
     * 修改数据异常
     */
    _3002(3002, "修改数据异常", false),
    /**
     * 删除数据异常
     */
    _3003(3003, "删除数据异常", false),
    /**
     * 查询数据异常
     */
    _3004(3004, "查询数据异常", false),
    /**
     * 数据库连接异常
     */
    _3005(3005, "数据库连接异常", false),
    /**
     * 事务超时
     */
    _3006(3006, "事务超时", false),
    /**
     * 数据库无法获取连接
     */
    _3007(3007, "数据库无法获取连接", false),
    /**
     * 访问外部服务异常：连接不上
     */
    _4001(4001, "访问外部服务异常：连接不上", false),
    /**
     * 访问外部服务异常：访问超时
     */
    _4002(4002, "访问外部服务异常：访问超时", false),
    /**
     * 访问外部服务异常：请求异常
     */
    _4003(4003, "访问外部服务异常：请求异常", false),
    /**
     * 资源已失效，请刷新重试
     */
    _5001(5001, "资源已失效，请刷新重试", true),

    /**
     * 错误码及其描述
     * 示例：(5001, "错误描述，{0}是被替换占位符")
     * 未登陆或登录超时！
     */
    _6001(6001, "未登陆或登录超时！", true),
    /**
     * 参数不正确
     */
    _7001(7001, "{0}参数不正确", true),
    /**
     * {0}已存在
     */
    _7002(7002, "{0}已存在", true),
    /**
     * {0}不存在
     */
    _7003(7003, "{0}不存在", true),
    /**
     * {0}参数值不正确，请使用以下值：{1}
     */
    _7004(7004, "{0}参数值不正确，请使用以下值：{1}", true),
    /**
     * {0}保存失败
     */
    _7005(7004, "{0}保存失败", true),

    /**
     * {0}
     */
    _8001(8001, "{0}", true),

    /**
     * 数据库导出失败
     */
    _9001(9001, "数据库导出失败", false);


    private final int code;
    private final String desc;
    private final boolean businessException;

    CommonStatusCode(final int code, final String desc, final boolean businessException) {
        this.code = code;
        this.desc = desc;
        this.businessException = businessException;
    }

}
